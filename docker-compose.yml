# docker-compose.yml
version: '3.8'

services:
    # Servicio de la aplicación PHP (Laravel)
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            args:
                PUID: ${PUID:-1000}
                PGID: ${PGID:-1000}
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html # Monta el código de tu proyecto
        networks:
            - app-network

    # Servicio del servidor web Nginx
    nginx:
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
        container_name: laravel_nginx
        restart: unless-stopped
        ports:
            - "8080:80" # Mapea el puerto 8080 del host al puerto 80 del contenedor
        volumes:
            - .:/var/www/html # Monta el código de tu proyecto
        depends_on:
            - app # Nginx depende de que el servicio 'app' esté corriendo
        networks:
            - app-network

    # Servicio de la base de datos MySQL
    db:
        image: mysql:8.0
        container_name: laravel_db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-laravel}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
        volumes:
            - dbdata:/var/lib/mysql # Persistencia de datos de la base de datos
        networks:
            - app-network

# Redes para que los servicios se comuniquen entre sí
networks:
    app-network:
        driver: bridge

# Volúmenes para persistencia de datos
volumes:
    dbdata:
        driver: local